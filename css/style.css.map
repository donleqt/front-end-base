{"version":3,"file":"style.css","sources":["importer.scss","components/mixin.scss","global.scss","components/footer.scss","components/header.scss","components/blocks.scss","pages/home.scss"],"sourcesContent":["//Mixin\r\n@import \"components/mixin\";\r\n\r\n//Global\r\n@import \"global\";\r\n\r\n// Components\r\n@import \"components/footer\";\r\n@import \"components/header\";\r\n@import \"components/blocks\";\r\n\r\n//Page\r\n@import \"pages/home\";","@mixin transform($value) {\r\n    -webkit-transform: $value;\r\n    -moz-transform: $value;\r\n    -ms-transform: $value;\r\n    -o-transform: $value;\r\n    transform: $value;\r\n}\r\n@mixin box-sizing($value) {\r\n    -webkit-box-sizing: $value;\r\n    -moz-box-sizing: $value;\r\n    box-sizing: $value;\r\n}\r\n@mixin breakpoint($min: 0, $max: 0) {\r\n    $type: type-of($min);\r\n    @if $type == string {\r\n        $class: $min;\r\n        @if $class == xs {\r\n            @media (max-width: 767px) { @content; }\r\n        }\r\n        \r\n        @else if $class == sm {\r\n            @media (min-width: 768px) { @content; }\r\n        }\r\n        \r\n        @else if $class == md {\r\n            @media (min-width: 992px) { @content; }\r\n        }\r\n        \r\n        @else if $class == lg {\r\n            @media (min-width: 1200px) { @content; }\r\n        }\r\n        \r\n        @else {\r\n            @warn \"Breakpoint mixin supports: xs, sm, md, lg\";\r\n        }\r\n    }\r\n    @else if $type == number {\r\n        $query: \"all\" !default;\r\n        @if $min != 0 and $max != 0 {\r\n            $query: \"(min-width: #{$min}) and (max-width: #{$max})\";\r\n        }\r\n        @else if $min != 0 and $max == 0 {\r\n            $query: \"(min-width: #{$min})\";\r\n        }\r\n        @else if $min == 0 and $max != 0 {\r\n            $query: \"(max-width: #{$max})\";\r\n        }\r\n        @media #{$query} {\r\n            @content;\r\n        }\r\n    }\r\n}","//Fonts\r\n@import url('https://fonts.googleapis.com/css?family=Raleway:400,500,600,700,700i&subset=latin-ext');\r\n\r\nhtml {\r\n    font-size: 62.5%;\r\n    min-height: 100%;\r\n    line-height: 1.2;\r\n    @include box-sizing(border-box);\r\n}\r\nbody {\r\n    margin: 0;\r\n    min-height: 100%;\r\n    font-family: 'Helvetica Neue', Helvetica Arial, sans-serif;\r\n}\r\n\r\na {\r\n    color: inherit;\r\n    text-decoration: none;\r\n}\r\na:hover {\r\n    opacity: 0.67;\r\n}\r\n\r\n.container {\r\n    margin: 0 auto;\r\n    padding: 0 15px;\r\n    max-width: 1018px;\r\n}\r\nh1 { font-size: 3.2rem;}\r\nh2 { font-size: 2.4rem;}\r\nh3 { font-size: 1.8rem;}\r\nh4 { font-size: 1.6rem;}\r\nh5 { font-size: 1.3rem;}\r\nh6 { font-size: 1.1rem;}","","","",".page-home {\r\n    \r\n}"],"mappings":"AECA,OAAO,CAAC,4FAAI;AAEZ,AAAA,IAAI,CAAC;EACD,SAAS,EAAE,KAAM;EACjB,UAAU,EAAE,IAAK;EACjB,WAAW,EAAE,GAAI;EDEjB,kBAAkB,ECDE,UAAU;EDE9B,eAAe,ECFK,UAAU;EDG9B,UAAU,ECHU,UAAU,GACjC;;AACD,AAAA,IAAI,CAAC;EACD,MAAM,EAAE,CAAE;EACV,UAAU,EAAE,IAAK;EACjB,WAAW,EAAE,6CAA8C,GAC9D;;AAED,AAAA,CAAC,CAAC;EACE,KAAK,EAAE,OAAQ;EACf,eAAe,EAAE,IAAK,GACzB;;AACD,AAAC,CAAA,AAAA,MAAM,CAAC;EACJ,OAAO,EAAE,IAAK,GACjB;;AAED,AAAA,UAAU,CAAC;EACP,MAAM,EAAE,MAAO;EACf,OAAO,EAAE,MAAO;EAChB,SAAS,EAAE,MAAO,GACrB;;AACD,AAAA,EAAE,CAAC;EAAE,SAAS,EAAE,MAAO,GAAG;;AAC1B,AAAA,EAAE,CAAC;EAAE,SAAS,EAAE,MAAO,GAAG;;AAC1B,AAAA,EAAE,CAAC;EAAE,SAAS,EAAE,MAAO,GAAG;;AAC1B,AAAA,EAAE,CAAC;EAAE,SAAS,EAAE,MAAO,GAAG;;AAC1B,AAAA,EAAE,CAAC;EAAE,SAAS,EAAE,MAAO,GAAG;;AAC1B,AAAA,EAAE,CAAC;EAAE,SAAS,EAAE,MAAO,GAAG","names":[]}